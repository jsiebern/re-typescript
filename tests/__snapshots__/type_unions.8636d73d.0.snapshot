type unions â€º can use recursion in nested union types when using type params - arrays
module ValueOrArray: {
  type t('T);
  let t: 'T => t('T);
  let arr_valueOrArray: array(t('T)) => t('T);
} = {
  [@unboxed]
  type t('T) =
    | Any('a): t('T);
  let t = (v: 'T) => Any(v);
  let arr_valueOrArray = (v: array(t('T))) => Any(v);
};
type valueOrArray('T) = ValueOrArray.t('T);

